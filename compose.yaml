services:
  app:
    build: .
    env_file:
      - .env
    ports:
      - "47291:47291"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    command: ["./djin"]
  db:
    image: postgres:alpine
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DB_PORT}
#    command: |
#      postgres 
#      -c log_statement=all 
#      -c log_connections=on 
#      -c log_disconnections=on
#      -c log_line_prefix='%t [%p] %u@%d: '
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user_2025_secure_dzhinn -d application_db_for_dzhinn"]
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "127.0.0.1:54322:5432"
    networks:
      - app-network
    volumes:
      - postgres-db:/var/lib/postgresql/data

volumes:
  postgres-db:

networks:
  app-network:
    driver: bridge
